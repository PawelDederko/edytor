//---------------------------------------------------------------------------


#pragma hdrstop

#include "Unit2.h"

//---------------------------------------------------------------------------

#pragma package(smart_init)


//---------------------------------------------------------------------------
/* Istotne jest wywo³anie konstruktora klasy, po której dziedziczymy, co ma
miejsce w nastêpuj¹cej lini - : TTabSheet(APageControl) */
TDocument::TDocument(TPageControl *APageControl): TTabSheet(APageControl)
{
 PageControl = APageControl;
 Caption = "Nowy plik";
 /* s³ówko this oznacza odwo³anie siê do konkretnej instancji obiektu
klasy TDocument*/
 RichEdit = new TRichEdit(this);
 RichEdit->Parent = this;
 RichEdit->Align = alClient;
 RichEdit->WordWrap = false;
 RichEdit->ScrollBars = ssBoth;
 RichEdit->OnChange = Form1::UaktualnijStatystykiExecute;
}
//---------------------------------------------------------------------------
void TDocument::LoadFromFile(String AFileName)
{
 FileName = AFileName;
 RichEdit->Lines->LoadFromFile(FileName);
 /*Procedura ExtractFileName pozwala na wyci¹gniecie samej nazwy pliku z
pe³nej œcie¿ki dostêpu. Nazwa zak³adki bêdzie nazw¹ pliku.*/
 Caption = ExtractFileName(FileName);
}//---------------------------------------------------------------------------void TDocument::SaveToFile(String AFileName){
 FileName = AFileName;
 RichEdit->Lines->SaveToFile(FileName);
 Caption = ExtractFileName(FileName);

//	if(SaveDialog1->Execute()) {
//		RichEdit1->Lines->SaveToFile(SaveDialog1->FileName);
//	}
}//---------------------------------------------------------------------------
 __fastcall TDocument::~TDocument()
 {
    delete RichEdit;
 }
 //---------------------------------------------------------------------------
TStringList *Tokenize (String s,String delimiter)
{
 TStringList *StringList;
 int l; //length of s
 int start,delimp;
 String sub;
 StringList = new TStringList();
 start=0;
 if (s.Pos(delimiter)>0)
 {
 delimp = s.Pos(delimiter);
 do
 {
 l=s.Length();
 sub=s.SubString(start,delimp-1);
 if (sub != "") StringList->Add(sub);
 s=s.SubString(delimp+1,l-delimp);
 delimp = s.Pos(delimiter);
 } while (delimp != 0);
 StringList->Add(s); // dodanie tego co zosta³o na koñcu
 }
 else StringList->Add(s);
 return StringList;
}
